{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "CLPS2C",
	"scopeName": "source.clps2c",
	"settings": {
        "foreground": "#ff00ff"
    },
	"patterns": [
		{
			"include": "#comments"
        },
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#operators"
		},
		{
			"name": "entity.name.tag.css",
			"match": "(?<=(^[ \t]*Function|Call) )\\w+"
		},
		{
			"name": "string.regexp",
			"match": "\\$(zero|at|v0|v1|a0|a1|a2|a3|t0|t1|t2|t3|t4|t5|t6|t7|s0|s1|s2|s3|s4|s5|s6|s7|t8|t9|k0|k1|gp|sp|fp|s8|ra|pc|hi|lo|f31|f30|f29|f28|f27|f26|f25|f24|f23|f22|f21|f20|f19|f18|f17|f16|f15|f14|f13|f12|f11|f10|f9|f8|f7|f6|f5|f4|f3|f2|f1|f0)"
		},
		{
			"match": "^[ \t]*(?i)(Set|SetEncoding|SE|SendRaw|SR|SendRawWeight|SRW|ASM_START|ASM_END|Include|Function|EndFunction|Call|Write8|W8|Write16|W16|Write32|W32|WriteFloat|WF|WriteString|WS|WriteBytes|WB|WritePointer8|WP8|WritePointer16|WP16|WritePointer32|WP32|WritePointerFloat|WPF|CopyBytes|CB|Fill8|F8|Fill16|F16|Fill32|F32|Increment8|I8|Increment16|I16|Increment32|I32|Decrement8|D8|Decrement16|D16|Decrement32|D32|OR8|OR16|AND8|AND16|XOR8|XOR16)\\b|((\\w*?:?\\s*)(add\\.s|sub\\.s|mul\\.s|div\\.s|sqrt\\.s|abs\\.s|mov\\.s|neg\\.s|madd\\.s|msub\\.s|cvt\\.w\\.s|max\\.s|min\\.s|c\\.f\\.s|c\\.eq\\.s|c\\.lt\\.s|c\\.le\\.s|cvt\\.s\\.w|j|jal|beq|beqz|b|bne|bnez|blez|bgtz|addi|addiu|slti|sltiu|andi|ori|xori|lui|beql|beqzl|bnel|bnezl|blezl|bgtzl|daddi|daddiu|ldl|ldr|lb|lh|lwl|lw|lbu|lhu|lwr|lwu|sb|sh|swl|sw|sdl|sdr|swr|lwc1|ld|li|swc1|sd|sll|nop|srl|sra|sllv|srlv|srav|jr|jalr|movz|movn|syscall|break|sync|mfhi|mthi|mflo|mtlo|dsllv|dsrlv|dsrav|mult|multu|div|divu|add|addu|move|sub|negu|and|or|xor|nor|slt|sltu|dadd|daddu|dsub|dsubu|tge|tgeu|tlt|tltu|teq|tne|dsll|dsrl|dsra|dsll32|dsrl32|dsra32|bltz|bgez|bltzl|bgezl|tgei|tgeiu|tlti|tltiu|teqi|tnei|bltzal|bgezal|bltzall|bgezall|mfc1|cfc1|mtc1|ctc1|bc1f|bc1t|bc1fl|bc1tl))\\b",
			"captures": {
				"1": {
					"name": "constant.character"
				},
				"4": {
					"name": "constant.character"
				}
			}
		},
		{
			"name": "constant.numeric",
			"match": "(?i)(\\b-?(0x)?[0-9A-Fa-f]{1,8}\\b)|\\b-?Infinity\\b|\\bNaN\\b"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.single-line",
					"match": "//.*$"
				},
				{
					"name": "comment.multi-line",
					"begin": "/\\*",
					"end": "\\*/"
				}
			]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.clps2c",
				"match": "(?i)(If|EndIf|EI)\\b|&&|([=!<>&|]|~[&|])([:.])"
			}]
		},
		"strings": {
			"name": "string.quoted.double.clps2c",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.clps2c",
					"match": "\\\\(t|n|0|\")"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.arithmetic.v",
					"match": "(\\+|\\-|\\*|\\/|\\%|\\+\\+|\\-\\-|\\>\\>|\\<\\<)"
				}
			]
		}
	}
}